////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьИнтерфейсРолей("ЗаполнитьРоли", Объект.Роли);
	ОбработатьИнтерфейсРолей("НастроитьИнтерфейсРолейПриСозданииФормы", ЗначениеЗаполнено(Объект.Ссылка));
	
	// Подготовка вспомогательных данных.
	УправлениеДоступомСлужебный.ПриСозданииНаСервереФормыРедактированияРазрешенныхЗначений(ЭтотОбъект, Истина);
	
	// Установка постоянной доступности свойств.
	
	// Определение необходимости настройки ограничений доступа.
	Если НЕ УправлениеДоступом.ОграничиватьДоступНаУровнеЗаписей() Тогда
		Элементы.ВидыИЗначенияДоступа.Видимость = Ложь;
	КонецЕсли;
	
	// Определение возможности редактирования элементов формы (перезапись доступна).
	БезРедактированияПоставляемыхЗначений = ТолькоПросмотр
		ИЛИ НЕ Объект.Ссылка.Пустая() И Справочники.ПрофилиГруппДоступа.ЗапретИзмененияПрофиля(Объект);
		
	Если Объект.Ссылка = Справочники.ПрофилиГруппДоступа.Администратор
	   И Не Пользователи.ЭтоПолноправныйПользователь(,ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы().Локальный) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.Наименование.ТолькоПросмотр = БезРедактированияПоставляемыхЗначений;
	
	// Настройка редактирования видов доступа.
	Элементы.ВидыДоступа.ТолькоПросмотр                     =    БезРедактированияПоставляемыхЗначений;
	Элементы.ВидыДоступаДобавить.Доступность                = НЕ БезРедактированияПоставляемыхЗначений;
	Элементы.КонтекстноеМенюВидыДоступаДобавить.Доступность = НЕ БезРедактированияПоставляемыхЗначений;
	
	ОбработатьИнтерфейсРолей("УстановитьТолькоПросмотрРолей", БезРедактированияПоставляемыхЗначений);
	
	УстановитьДоступностьОписанияИВосстановленияПоставляемогоПрофиля();
	
	ВыполненаПроцедураПриСозданииНаСервере = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ВыполненаПроцедураПриСозданииНаСервере Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьИнтерфейсРолей("ЗаполнитьРоли", Объект.Роли);
	ОбработатьИнтерфейсРолей("НастроитьИнтерфейсРолейПриСозданииФормы", Истина);
	
	УправлениеДоступомСлужебный.ПриПовторномЧтенииНаСервереФормыРедактированияРазрешенныхЗначений(
		ЭтотОбъект, ТекущийОбъект);
	
	ОбновитьГруппыДоступаПрофиля = Ложь;
	
	УстановитьДоступностьОписанияИВосстановленияПоставляемогоПрофиля(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ТребуетсяПроверитьЗаполнениеПрофиля = НЕ ПараметрыЗаписи.Свойство(
		"ОтветПоОбновлениюГруппДоступаПрофиляПолучен");
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
	   И ТребуетсяОбновитьГруппыДоступаПрофиля
	   И НЕ ПараметрыЗаписи.Свойство("ОтветПоОбновлениюГруппДоступаПрофиляПолучен") Тогда
		
		Отказ = Истина;
		Если ПроверитьЗаполнение() Тогда
			ПоказатьВопрос(
				Новый ОписаниеОповещения("ПередЗаписьюПродолжение", ЭтотОбъект, ПараметрыЗаписи),
				ТекстВопросаОбновитьГруппыДоступаПрофиля(),
				РежимДиалогаВопрос.ДаНетОтмена,
				,
				КодВозвратаДиалога.Нет);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Заполнение ролей объекта из коллекции.
	ТекущийОбъект.Роли.Очистить();
	Для каждого Строка Из КоллекцияРолей Цикл
		ТекущийОбъект.Роли.Добавить().Роль = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
			"Роль." + Строка.Роль);
	КонецЦикла;
	
	Если ПараметрыЗаписи.Свойство("ОбновитьГруппыДоступаПрофиля") Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ОбновитьГруппыДоступаПрофиля");
	КонецЕсли;
	
	УправлениеДоступомСлужебный.ПередЗаписьюНаСервереФормыРедактированияРазрешенныхЗначений(
		ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ДополнительныеСвойства.Свойство(
	         "ПерсональныеГруппыДоступаСОбновленнымНаименованием") Тогда
		
		ПараметрыЗаписи.Вставить(
			"ПерсональныеГруппыДоступаСОбновленнымНаименованием",
			ТекущийОбъект.ДополнительныеСвойства.ПерсональныеГруппыДоступаСОбновленнымНаименованием);
	КонецЕсли;
	
	УправлениеДоступомСлужебный.ПослеЗаписиНаСервереФормыРедактированияРазрешенныхЗначений(
		ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	УстановитьДоступностьОписанияИВосстановленияПоставляемогоПрофиля(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбъектЗаписывался = Истина;
	ТребуетсяОбновитьГруппыДоступаПрофиля = Ложь;
	
	Оповестить("Запись_ПрофилиГруппДоступа", Новый Структура, Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("ПерсональныеГруппыДоступаСОбновленнымНаименованием") Тогда
		ОповеститьОбИзменении(Тип("СправочникСсылка.ГруппыДоступа"));
		
		Для каждого ПерсональнаяГруппаДоступа Из ПараметрыЗаписи.ПерсональныеГруппыДоступаСОбновленнымНаименованием Цикл
			Оповестить("Запись_ГруппыДоступа", Новый Структура, ПерсональнаяГруппаДоступа);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ТребуетсяПроверитьЗаполнениеПрофиля Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	ПроверенныеРеквизитыОбъекта = Новый Массив;
	Ошибки = Неопределено;
	
	// Проверка наличия ролей в метаданных.
	ПроверенныеРеквизитыОбъекта.Добавить("Роли.Роль");
	
	ЭлементыДерева = Роли.ПолучитьЭлементы();
	Для каждого Строка Из ЭлементыДерева Цикл
		Если Строка.Пометка И Лев(Строка.Синоним, 1) = "?" Тогда
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
				"Роли[%1].РолиСиноним",
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Роль ""%1"" не найдена в метаданных.'"),
					Строка.Синоним),
				"Роли",
				ЭлементыДерева.Индекс(Строка),
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Роль ""%2"" в строке %1 не найдена в метаданных.'"),
					"%1", Строка.Синоним));
		КонецЕсли;
	КонецЦикла;
	
	// Проверка незаполненных и повторяющихся видов и значений доступа.
	УправлениеДоступомСлужебныйКлиентСервер.ОбработкаПроверкиЗаполненияНаСервереФормыРедактированияРазрешенныхЗначений(
		ЭтотОбъект, Отказ, ПроверенныеРеквизитыОбъекта, Ошибки);
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
	ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Объект"));
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПроверенныеРеквизитыОбъекта",
		ПроверенныеРеквизитыОбъекта);
	
	Если НЕ ТекущийОбъект.ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбработатьИнтерфейсРолей("НастроитьИнтерфейсРолейПриЗагрузкеНастроек", Настройки);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ВидыДоступа

&НаКлиенте
Процедура ВидыДоступаПриИзменении(Элемент)
	
	ТребуетсяОбновитьГруппыДоступаПрофиля = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаПриАктивизацииСтроки(Элемент)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаПриАктивизацииСтроки(
		ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаПередНачаломДобавления(
		ЭтотОбъект, Элемент, Отказ, Копирование, Родитель, Группа);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаПередУдалением(Элемент, Отказ)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаПередУдалением(
		ЭтотОбъект, Элемент, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаПриНачалеРедактирования(
		ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаПриОкончанииРедактирования(
		ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элемента ВидДоступаПредставление таблицы формы ВидыДоступа

&НаКлиенте
Процедура ВидыДоступаВидДоступаПредставлениеПриИзменении(Элемент)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаВидДоступаПредставлениеПриИзменении(
		ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаВидДоступаПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаВидДоступаПредставлениеОбработкаВыбора(
		ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики событий элемента ВсеРазрешеныПредставление таблицы формы ВидыДоступа

&НаКлиенте
Процедура ВидыДоступаВсеРазрешеныПредставлениеПриИзменении(Элемент)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаВсеРазрешеныПредставлениеПриИзменении(
		ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыДоступаВсеРазрешеныПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ВидыДоступаВсеРазрешеныПредставлениеОбработкаВыбора(
		ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ЗначенияДоступа

&НаКлиенте
Процедура ЗначенияДоступаПриИзменении(Элемент)
	
	УправлениеДоступомСлужебныйКлиент.ЗначенияДоступаПриИзменении(
		ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияДоступаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	УправлениеДоступомСлужебныйКлиент.ЗначенияДоступаПриНачалеРедактирования(
		ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияДоступаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УправлениеДоступомСлужебныйКлиент.ЗначенияДоступаПриОкончанииРедактирования(
		ЭтотОбъект, Элемент, НоваяСтрока, ОтменаРедактирования);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗначениеДоступаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ЗначениеДоступаНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеДоступаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ЗначениеДоступаОбработкаВыбора(
		ЭтотОбъект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеДоступаОчистка(Элемент, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ЗначениеДоступаОчистка(
		ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеДоступаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ЗначениеДоступаАвтоПодбор(
		ЭтотОбъект, Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеДоступаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	УправлениеДоступомСлужебныйКлиент.ЗначениеДоступаОкончаниеВводаТекста(
		ЭтотОбъект, Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Роли

////////////////////////////////////////////////////////////////////////////////
// Для работы интерфейса ролей

&НаКлиенте
Процедура РолиПометкаПриИзменении(Элемент)
	
	Если Элементы.Роли.ТекущиеДанные <> Неопределено Тогда
		ОбработатьИнтерфейсРолей("ОбновитьСоставРолей");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВосстановитьПоНачальномуЗаполнению(Команда)
	
	Если Модифицированность ИЛИ ОбъектЗаписывался Тогда
		РазблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ВосстановитьПоНачальномуЗаполнениюПродолжение", ЭтотОбъект),
		НСтр("ru = 'Восстановить профиль по содержимому начального заполнения?'"),
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПоставляемогоПрофиля(Команда)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ОписаниеПоставляемогоПрофиляНаСервере(Объект.Ссылка));
	ТекстовыйДокумент.ТолькоПросмотр = Истина;
	
	ТекстовыйДокумент.Показать(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Описание поставляемого профиля ""%1""'"),
		Объект.Наименование));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНеИспользуемыеВидыДоступа(Команда)
	
	ПоказыватьНеИспользуемыеВидыДоступаНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Для работы интерфейса ролей

&НаКлиенте
Процедура ПоказатьТолькоВыбранныеРоли(Команда)
	
	ОбработатьИнтерфейсРолей("ТолькоВыбранныеРоли");
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппировкаРолейПоПодсистемам(Команда)
	
	ОбработатьИнтерфейсРолей("ГруппировкаПоПодсистемам");
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьРоли(Команда)
	
	ОбработатьИнтерфейсРолей("ОбновитьСоставРолей", "ВключитьВсе");
	
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтотОбъект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьРоли(Команда)
	
	ОбработатьИнтерфейсРолей("ОбновитьСоставРолей", "ИсключитьВсе");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Продолжение обработчика события ПередЗаписью
&НаКлиенте
Процедура ПередЗаписьюПродолжение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПараметрыЗаписи.Вставить("ОбновитьГруппыДоступаПрофиля");
	КонецЕсли;
	
	ПараметрыЗаписи.Вставить("ОтветПоОбновлениюГруппДоступаПрофиляПолучен");
	
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

// Продолжение обработчика команды ВосстановитьПоНачальномуЗаполнению
&НаКлиенте
Процедура ВосстановитьПоНачальномуЗаполнениюПродолжение(Ответ, Неопределен) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ВосстановитьПоНачальномуЗаполнениюЗавершение", ЭтотОбъект),
		ТекстВопросаОбновитьГруппыДоступаПрофиля(),
		РежимДиалогаВопрос.ДаНетОтмена,
		,
		КодВозвратаДиалога.Нет);
	
КонецПроцедуры

// Продолжение обработчика команды ВосстановитьПоНачальномуЗаполнению
&НаКлиенте
Процедура ВосстановитьПоНачальномуЗаполнениюЗавершение(Ответ, Неопределен) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьГруппыДоступа = (Ответ = КодВозвратаДиалога.Да);
	
	НачальноеЗаполнениеПрофиляГруппДоступа(ОбновитьГруппыДоступа);
	
	Прочитать();
	ПользователиСлужебныйКлиент.РазвернутьПодсистемыРолей(ЭтотОбъект);
	
	Если ОбновитьГруппыДоступа Тогда
		Текст = НСтр("ru = 'Профиль ""%1"" восстановлен по содержимому начального заполнения, группы доступа профиля обновлены.'");
	Иначе
		Текст = НСтр("ru = 'Профиль ""%1"" восстановлен по содержимому начального заполнения, группы доступа профиля не обновлены.'");
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Текст, Объект.Наименование));
	
КонецПроцедуры

&НаСервере
Процедура ПоказыватьНеИспользуемыеВидыДоступаНаСервере()
	
	УправлениеДоступомСлужебный.ОбновитьОтображениеНеиспользуемыхВидовДоступа(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьОписанияИВосстановленияПоставляемогоПрофиля(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = Объект;
	КонецЕсли;
	
	Если Справочники.ПрофилиГруппДоступа.ЕстьНачальноеЗаполнениеПрофиля(ТекущийОбъект.Ссылка) Тогда
		
		Если Справочники.ПрофилиГруппДоступа.ПоставляемыйПрофильИзменен(ТекущийОбъект) Тогда
			// Определение прав восстановления по начальному заполнению.
			Элементы.ВосстановитьПоНачальномуЗаполнению.Видимость =
				Пользователи.ЭтоПолноправныйПользователь(,, Ложь);
			
			Элементы.ОписаниеПоставляемогоПрофиля.Доступность = Ложь;
		Иначе
			Элементы.ВосстановитьПоНачальномуЗаполнению.Видимость = Ложь;
			Элементы.ОписаниеПоставляемогоПрофиля.Доступность = Истина;
		КонецЕсли;
	Иначе
		Элементы.ВосстановитьПоНачальномуЗаполнению.Видимость = Ложь;
		Элементы.ОписаниеПоставляемогоПрофиля.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ТекстВопросаОбновитьГруппыДоступаПрофиля()
	
	Возврат
		НСтр("ru = 'Обновить группы доступа, использующие этот профиль?
		           |
		           |Будут удалены лишние виды доступа с заданными для них
		           |значениями доступа и добавлены недостающие виды доступа.'");
		
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Для работы интерфейса ролей

&НаСервере
Процедура ОбработатьИнтерфейсРолей(Действие, ОсновнойПараметр = Неопределено)
	
	ПараметрыДействия = Новый Структура;
	ПараметрыДействия.Вставить("ОсновнойПараметр",       ОсновнойПараметр);
	ПараметрыДействия.Вставить("Форма",                  ЭтотОбъект);
	ПараметрыДействия.Вставить("КоллекцияРолей",         КоллекцияРолей);
	
	ПараметрыДействия.Вставить("СкрытьРольПолныеПрава",
		Объект.Ссылка <> Справочники.ПрофилиГруппДоступа.Администратор);
	
	ТипПользователей = ?(ОбщегоНазначенияПовтИсп.РазделениеВключено(), 
		Перечисления.ТипыПользователей.ПользовательОбластиДанных, 
		Перечисления.ТипыПользователей.ПользовательЛокальногоРешения);
	ПараметрыДействия.Вставить("ТипПользователей", ТипПользователей);
	
	ПользователиСлужебный.ОбработатьИнтерфейсРолей(Действие, ПараметрыДействия);
	
КонецПроцедуры

&НаСервере
Процедура НачальноеЗаполнениеПрофиляГруппДоступа(Знач ОбновитьГруппыДоступа)
	
	Справочники.ПрофилиГруппДоступа.ЗаполнитьПоставляемыйПрофиль(
		Объект.Ссылка, ОбновитьГруппыДоступа);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеПоставляемогоПрофиляНаСервере(Знач Профиль)
	
	Возврат Справочники.ПрофилиГруппДоступа.ОписаниеПоставляемогоПрофиля(Профиль);
	
КонецФункции

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, 
		ЭтотОбъект, "Объект.Комментарий");
КонецПроцедуры
