#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура обновляет данные регистра при изменении
// - разрешенных значений групп доступа,
// - разрешенных значений профилей групп доступа.
// 
// Параметры:
//  ГруппыДоступа - СправочникСсылка.ГруппыДоступа.
//                - Массив значений указанных выше типов.
//                - Неопределено - без отбора.
//
//  ЕстьИзменения - Булево (возвращаемое значение) - если производилась запись,
//                  устанавливается Истина, иначе не изменяется.
//
Процедура ОбновитьДанныеРегистра(ГруппыДоступа = Неопределено, ЕстьИзменения = Неопределено) Экспорт
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗначенияГруппДоступа");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗначенияГруппДоступаПоУмолчанию");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
		
		ОбновитьРазрешенныеЗначения(ГруппыДоступа, ЕстьИзменения);
		
		ОбновитьРазрешенныеЗначенияПоУмолчанию(ГруппыДоступа, ЕстьИзменения);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбновитьРазрешенныеЗначения(ГруппыДоступа = Неопределено, ЕстьИзменения = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипыГруппИЗначенийВидовДоступа",
		УправлениеДоступомСлужебныйПовтИсп.ТипыГруппИЗначенийВидовДоступа());
	
	ТекстЗапросовВременныхТаблиц =
	"ВЫБРАТЬ
	|	ТипыГруппИЗначенийВидовДоступа.ВидДоступа,
	|	ТипыГруппИЗначенийВидовДоступа.ТипГруппИЗначений
	|ПОМЕСТИТЬ ТипыГруппИЗначенийВидовДоступа
	|ИЗ
	|	&ТипыГруппИЗначенийВидовДоступа КАК ТипыГруппИЗначенийВидовДоступа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипыГруппИЗначенийВидовДоступа.ТипГруппИЗначений,
	|	ТипыГруппИЗначенийВидовДоступа.ВидДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступа.Ссылка КАК ГруппаДоступа,
	|	ЗначенияДоступаПрофиля.ВидДоступа,
	|	ЗначенияДоступаПрофиля.ЗначениеДоступа,
	|	ВЫБОР
	|		КОГДА ВидыДоступаПрофиля.ВсеРазрешены
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗначениеРазрешено
	|ПОМЕСТИТЬ НастройкиЗначений
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ВидыДоступаПрофиля
	|		ПО ГруппыДоступа.Профиль = ВидыДоступаПрофиля.Ссылка
	|			И (ВидыДоступаПрофиля.Предустановленный)
	|			И (НЕ ГруппыДоступа.ПометкаУдаления)
	|			И (НЕ ВидыДоступаПрофиля.Ссылка.ПометкаУдаления)
	|			И (&УсловиеОтбораГруппДоступа1)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ЗначенияДоступа КАК ЗначенияДоступаПрофиля
	|		ПО (ЗначенияДоступаПрофиля.Ссылка = ВидыДоступаПрофиля.Ссылка)
	|			И (ЗначенияДоступаПрофиля.ВидДоступа = ВидыДоступаПрофиля.ВидДоступа)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыДоступа.Ссылка,
	|	ЗначенияДоступа.ВидДоступа,
	|	ЗначенияДоступа.ЗначениеДоступа,
	|	ВЫБОР
	|		КОГДА ВидыДоступа.ВсеРазрешены
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ГруппыДоступа.ВидыДоступа КАК ВидыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ЗаданныеВидыДоступа
	|		ПО ВидыДоступа.Ссылка.Профиль = ЗаданныеВидыДоступа.Ссылка
	|			И ВидыДоступа.ВидДоступа = ЗаданныеВидыДоступа.ВидДоступа
	|			И (НЕ ЗаданныеВидыДоступа.Предустановленный)
	|			И (НЕ ВидыДоступа.Ссылка.ПометкаУдаления)
	|			И (НЕ ЗаданныеВидыДоступа.Ссылка.ПометкаУдаления)
	|			И (&УсловиеОтбораГруппДоступа2)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ЗначенияДоступа КАК ЗначенияДоступа
	|		ПО (ЗначенияДоступа.Ссылка = ВидыДоступа.Ссылка)
	|			И (ЗначенияДоступа.ВидДоступа = ВидыДоступа.ВидДоступа)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиЗначений.ГруппаДоступа,
	|	НастройкиЗначений.ЗначениеДоступа,
	|	МАКСИМУМ(НастройкиЗначений.ЗначениеРазрешено) КАК ЗначениеРазрешено
	|ПОМЕСТИТЬ НовыеДанные
	|ИЗ
	|	НастройкиЗначений КАК НастройкиЗначений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТипыГруппИЗначенийВидовДоступа КАК ТипыГруппИЗначенийВидовДоступа
	|		ПО НастройкиЗначений.ВидДоступа = ТипыГруппИЗначенийВидовДоступа.ВидДоступа
	|			И (ТИПЗНАЧЕНИЯ(НастройкиЗначений.ЗначениеДоступа) = ТИПЗНАЧЕНИЯ(ТипыГруппИЗначенийВидовДоступа.ТипГруппИЗначений))
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиЗначений.ГруппаДоступа,
	|	НастройкиЗначений.ЗначениеДоступа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НастройкиЗначений.ГруппаДоступа,
	|	НастройкиЗначений.ЗначениеДоступа,
	|	ЗначениеРазрешено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НастройкиЗначений";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НовыеДанные.ГруппаДоступа,
	|	НовыеДанные.ЗначениеДоступа,
	|	НовыеДанные.ЗначениеРазрешено,
	|	&ПодстановкаПоляВидИзмененияСтроки
	|ИЗ
	|	НовыеДанные КАК НовыеДанные";
	
	// Подготовка выбираемых полей с необязательным отбором.
	Поля = Новый Массив; 
	Поля.Добавить(Новый Структура("ГруппаДоступа", "&УсловиеОтбораГруппДоступа3"));
	Поля.Добавить(Новый Структура("ЗначениеДоступа"));
	Поля.Добавить(Новый Структура("ЗначениеРазрешено"));
	
	Запрос.Текст = УправлениеДоступомСлужебный.ТекстЗапросаВыбораИзменений(
		ТекстЗапроса, Поля, "РегистрСведений.ЗначенияГруппДоступа", ТекстЗапросовВременныхТаблиц);
	
	УправлениеДоступомСлужебный.УстановитьУсловиеОтбораВЗапросе(Запрос, ГруппыДоступа, "ГруппыДоступа",
		"&УсловиеОтбораГруппДоступа1:ГруппыДоступа.Ссылка
		|&УсловиеОтбораГруппДоступа2:ВидыДоступа.Ссылка
		|&УсловиеОтбораГруппДоступа3:СтарыеДанные.ГруппаДоступа");
		
	Изменения = Запрос.Выполнить().Выгрузить();
	
	УправлениеДоступомСлужебный.ОбновитьРегистрСведений(
		РегистрыСведений.ЗначенияГруппДоступа, Изменения, ЕстьИзменения, , "ГруппаДоступа");
	
КонецПроцедуры

Процедура ОбновитьРазрешенныеЗначенияПоУмолчанию(ГруппыДоступа = Неопределено, ЕстьИзменения = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТипыЗначенийВидовДоступа",
		УправлениеДоступомСлужебныйПовтИсп.ТипыЗначенийВидовДоступа());
	
	Запрос.УстановитьПараметр("ТипыГруппИЗначенийВидовДоступа",
		УправлениеДоступомСлужебныйПовтИсп.ТипыГруппИЗначенийВидовДоступа());
	
	ТекстЗапросовВременныхТаблиц =
	"ВЫБРАТЬ
	|	ТипыЗначенийВидовДоступа.ВидДоступа,
	|	ТипыЗначенийВидовДоступа.ТипЗначений
	|ПОМЕСТИТЬ ТипыЗначенийВидовДоступа
	|ИЗ
	|	&ТипыЗначенийВидовДоступа КАК ТипыЗначенийВидовДоступа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипыЗначенийВидовДоступа.ТипЗначений,
	|	ТипыЗначенийВидовДоступа.ВидДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыГруппИЗначенийВидовДоступа.ВидДоступа,
	|	ТипыГруппИЗначенийВидовДоступа.ТипГруппИЗначений
	|ПОМЕСТИТЬ ТипыГруппИЗначенийВидовДоступа
	|ИЗ
	|	&ТипыГруппИЗначенийВидовДоступа КАК ТипыГруппИЗначенийВидовДоступа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТипыГруппИЗначенийВидовДоступа.ТипГруппИЗначений,
	|	ТипыГруппИЗначенийВидовДоступа.ВидДоступа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступа.Ссылка КАК Ссылка,
	|	ГруппыДоступа.Профиль КАК Профиль
	|ПОМЕСТИТЬ ГруппыДоступа
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа КАК ПрофилиГруппДоступа
	|		ПО ГруппыДоступа.Профиль = ПрофилиГруппДоступа.Ссылка
	|			И (НЕ ГруппыДоступа.ПометкаУдаления)
	|			И (НЕ ПрофилиГруппДоступа.ПометкаУдаления)
	|			И (&УсловиеОтбораГруппДоступа1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппыДоступа.Ссылка,
	|	ГруппыДоступа.Профиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступа.Ссылка КАК ГруппаДоступа,
	|	ВидыДоступаПрофиля.ВидДоступа,
	|	ВидыДоступаПрофиля.ВсеРазрешены
	|ПОМЕСТИТЬ НастройкиВидовДоступа
	|ИЗ
	|	ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ВидыДоступаПрофиля
	|		ПО ГруппыДоступа.Профиль = ВидыДоступаПрофиля.Ссылка
	|			И (ВидыДоступаПрофиля.Предустановленный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыДоступа.Ссылка,
	|	ВидыДоступа.ВидДоступа,
	|	ВидыДоступа.ВсеРазрешены
	|ИЗ
	|	ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа.ВидыДоступа КАК ВидыДоступа
	|		ПО (ВидыДоступа.Ссылка = ГруппыДоступа.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрофилиГруппДоступа.ВидыДоступа КАК ЗаданныеВидыДоступа
	|		ПО (ЗаданныеВидыДоступа.Ссылка = ГруппыДоступа.Профиль)
	|			И (ЗаданныеВидыДоступа.ВидДоступа = ВидыДоступа.ВидДоступа)
	|			И (НЕ ЗаданныеВидыДоступа.Предустановленный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НастройкиЗначений.ГруппаДоступа,
	|	ТипыГруппИЗначенийВидовДоступа.ВидДоступа,
	|	ИСТИНА КАК СНастройкой
	|ПОМЕСТИТЬ НаличиеНастроекЗначений
	|ИЗ
	|	ТипыГруппИЗначенийВидовДоступа КАК ТипыГруппИЗначенийВидовДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК НастройкиЗначений
	|		ПО (ТИПЗНАЧЕНИЯ(ТипыГруппИЗначенийВидовДоступа.ТипГруппИЗначений) = ТИПЗНАЧЕНИЯ(НастройкиЗначений.ЗначениеДоступа))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыДоступа.Ссылка КАК ГруппаДоступа,
	|	ТипыЗначенийВидовДоступа.ТипЗначений КАК ТипЗначенийДоступа,
	|	МАКСИМУМ(ЕСТЬNULL(НастройкиВидовДоступа.ВсеРазрешены, ИСТИНА)) КАК ВсеРазрешены,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ЕСТЬNULL(НастройкиВидовДоступа.ВсеРазрешены, ИСТИНА)) = ИСТИНА
	|				И МАКСИМУМ(ЕСТЬNULL(НаличиеНастроекЗначений.СНастройкой, ЛОЖЬ)) = ЛОЖЬ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БезНастройки
	|ПОМЕСТИТЬ НовыеДанные
	|ИЗ
	|	ГруппыДоступа КАК ГруппыДоступа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТипыЗначенийВидовДоступа КАК ТипыЗначенийВидовДоступа
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиВидовДоступа КАК НастройкиВидовДоступа
	|		ПО (НастройкиВидовДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка)
	|			И (НастройкиВидовДоступа.ВидДоступа = ТипыЗначенийВидовДоступа.ВидДоступа)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеНастроекЗначений КАК НаличиеНастроекЗначений
	|		ПО (НаличиеНастроекЗначений.ГруппаДоступа = НастройкиВидовДоступа.ГруппаДоступа)
	|			И (НаличиеНастроекЗначений.ВидДоступа = НастройкиВидовДоступа.ВидДоступа)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыДоступа.Ссылка,
	|	ТипыЗначенийВидовДоступа.ТипЗначений
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппыДоступа.Ссылка,
	|	ТипыЗначенийВидовДоступа.ТипЗначений,
	|	ВсеРазрешены,
	|	БезНастройки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НастройкиВидовДоступа";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НовыеДанные.ГруппаДоступа,
	|	НовыеДанные.ТипЗначенийДоступа,
	|	НовыеДанные.ВсеРазрешены,
	|	НовыеДанные.БезНастройки,
	|	&ПодстановкаПоляВидИзмененияСтроки
	|ИЗ
	|	НовыеДанные КАК НовыеДанные";
	
	// Подготовка выбираемых полей с необязательным отбором.
	Поля = Новый Массив; 
	Поля.Добавить(Новый Структура("ГруппаДоступа", "&УсловиеОтбораГруппДоступа2"));
	Поля.Добавить(Новый Структура("ТипЗначенийДоступа"));
	Поля.Добавить(Новый Структура("ВсеРазрешены"));
	Поля.Добавить(Новый Структура("БезНастройки"));
	
	Запрос.Текст = УправлениеДоступомСлужебный.ТекстЗапросаВыбораИзменений(
		ТекстЗапроса, Поля, "РегистрСведений.ЗначенияГруппДоступаПоУмолчанию", ТекстЗапросовВременныхТаблиц);
	
	УправлениеДоступомСлужебный.УстановитьУсловиеОтбораВЗапросе(Запрос, ГруппыДоступа, "ГруппыДоступа",
		"&УсловиеОтбораГруппДоступа1:ГруппыДоступа.Ссылка
		|&УсловиеОтбораГруппДоступа2:СтарыеДанные.ГруппаДоступа");
	
	Изменения = Запрос.Выполнить().Выгрузить();
	
	УправлениеДоступомСлужебный.ОбновитьРегистрСведений(
		РегистрыСведений.ЗначенияГруппДоступаПоУмолчанию, Изменения, ЕстьИзменения, , "ГруппаДоступа");
	
КонецПроцедуры

#КонецЕсли