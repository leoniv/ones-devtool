////////////////////////////////////////////////////////////////////
// Обработка установки и настройки контура
////////////////////////////////////////////////////////////////////


//
//	ЗАПОЛНИТЬ ЗНАЧЕНИЯ ВОЗВРАЩАЕМЫЕ ФУНКЦИЯМИ
//////////////////////////////////////////////////////////

//Имя пакета(проекта)
function Package() export
	return "package_sub";
endfunction	

//Имя узла. Запуск возможен только
//в контексте данного узла
//Должно соответсвовать
//значению root_*.Name()
function NodeName() export
	return "name_sub";
endfunction	

//Версия узла. Запуск возможен только
//в контексте узла соотв. версии
//Должно соответсвовать
//значению root_*.Version()
function NodeVersion() export
	return "version_sub";
endfunction	


//Имя корневого модуля модификации
//Если таковой отсутсвует
//возвращаем пустую строку
function RootModule()
	raise "Установите значение возвращаемое RootModule()";
	return "XXX";
endfunction	

//Возвращает массив имен конфигураций
//В котрых разрешён запуск при отсутствии
//корневого модуля RootModule()=""
function BaseConfArray()  export
	raise "Установите значение возвращаемое BaseConfArray()";
	result = new Array;
	result.Add("XXX");
	return result;
endfunction	


//
//////////////////////////////////////////////////////////////////
// СТАНДАРТНЫЙ ИНТЕРФЕЙС НЕ ТРОГАЕМ

//Возвращает корневой модуль если есть
//если нет возвращает неопределено
function Update(arg=неопределено) export
	//Если есть корневой модуль модификации тогда
	//Запускаем root_*.Update()
	root_module = Неопределено;
	if ValidNode(root_module) then
		return 	root_module.Update(arg);
	endif	
endfunction	

//Запуск возможен только
//в контексте узла root_*.Name()                  
//входящем в пакет Package()
//В противном случае вызывает исключение
function ValidNode(root_module)
	root_module = GetRootModule();
	if root_module <> Неопределено then
		Если НРег(root_module.Package()) <> НРег(Package()) Тогда
			Raise "Пакет """+Package()+""" не входит в список разрешенных.
			  |Проверте значение возвращаемые Package()";
			
		ИначеЕсли НРег(root_module.Name()) <> НРег(NodeName()) Тогда
			Raise "Узел """+NodeName()+""" не входит в список разрешенных.
			  |Проверте значение возвращаемые NodeName()";
			
			
		ИначеЕсли НРег(root_module.Version()) <> НРег(NodeVersion()) Тогда
			Raise "Версия узла """+NodeVersion()+""" не входит в список разрешенных.
			  |Проверте значение возвращаемые NodeVersion()";
			
			
		КонецЕсли;	  
	elsif BaseConfArray().Найти(Метаданные.Синоним) = Неопределено Тогда
		Raise "Кофигурация поставщика """+Метаданные.Синоним+""" не входит в список разрешенных.
			  |Проверте массив возвращаемый  GetBaseConfArray()";
	endif;
	return true;	  
endfunction	

function GetRootModule()
	if Метаданные.ОбщиеМодули.Найти(RootModule()) <> Неопределено then
		Возврат Вычислить(RootModule());
	else
		Возврат Неопределено;
	endif	
endfunction	



